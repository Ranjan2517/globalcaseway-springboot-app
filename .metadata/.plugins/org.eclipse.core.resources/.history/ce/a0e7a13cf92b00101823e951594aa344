package com.app.util;

import com.app.entity.User;
import com.app.pojo.ClientData;
import com.app.repository.UserRepository;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.itextpdf.forms.PdfAcroForm;
import com.itextpdf.forms.fields.PdfFormField;
import com.itextpdf.kernel.pdf.*;

import java.io.File;
import java.io.IOException;
import java.util.Iterator;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;

public class FillAcroForm {


    // Dummy data generator based on field names
	private static String generateDummyData(String fieldName, String clientData1Json) {
	    try {
	        ObjectMapper objectMapper = new ObjectMapper();
	        ClientData clientData = objectMapper.readValue(clientData1Json, ClientData.class);
   System.out.println("clientData"+clientData.getBasicInformation().getFormsdata());
	        fieldName = fieldName.toLowerCase();
	        if (fieldName.contains("certificatedate")) return "01/01/2023";
	        if (fieldName.contains("surname")) return "Doe";
	        if (fieldName.contains("givenname")) return "John";
	        if (fieldName.contains("dob[0]")) return "11/01/2020";
	        if (fieldName.contains("pob")) return "PUNE";
	        if (fieldName.contains("country")) return "Canada";
	        if (fieldName.contains("feet")) return "5";
	        if (fieldName.contains("clientuci")) return "123456";
	        if (fieldName.contains("inches")) return "2inch";
	        if (fieldName.contains("birthcountry")) return "India";
	        if (fieldName.contains("birthdate")) return "11/02/2002";
	        if (fieldName.contains("certificatenumber")) return "certifacte123";
	        if (fieldName.contains("marriagedate")) return "Male";
	        if (fieldName.contains("placeofmarriage")) return "Mumbai";
	        if (fieldName.contains("gender")) return "Male";
	        if (fieldName.contains("height")) return "180";
	        if (fieldName.contains("parents")) return "Sample Parent";
	        if (fieldName.contains("websitelink")) return "https://example.com";
	        if (fieldName.contains("linkcit")) return "https://linkcit.sample.com";
	        if (fieldName.contains("linkguide")) return "https://guide.example.com";

	    } catch (Exception e) {
	        e.printStackTrace(); // You can log this instead
	    }

	    return "";
	}


 
    
    public static void fillPdfWithDummyData(String inputPath, String outputPath, String clientData1Json) {
        try (PdfReader reader = new PdfReader(inputPath);
             PdfWriter writer = new PdfWriter(outputPath);
             PdfDocument pdfDoc = new PdfDocument(reader, writer)) {
        	
        	ObjectMapper objectMapper = new ObjectMapper();
            ClientData clientData = objectMapper.readValue(clientData1Json, ClientData.class);

            // ✅ Print some values from Java object
            System.out.println("Client First Name: " +
                clientData.getBasicInformation().getFormsdata().getFirstName());

            System.out.println("Intended Location: " +
                clientData.getBasicInformation().getFormsdata().getIntendedLocation());

            System.out.println("Father's Occupation: " +
                clientData.getParentDetails().getFormsdata().getFatherInfo().getOccupation());
            
             
            PdfAcroForm form = PdfAcroForm.getAcroForm(pdfDoc, true);
            if (form == null || form.getFormFields().isEmpty()) {
                System.out.println("❌ No AcroForm fields found.");
                return;
            }

            Map<String, PdfFormField> fields = form.getFormFields();
            for (String fieldName : fields.keySet()) {
                System.out.println(fieldName);  // Print the field name
            }

            for (Map.Entry<String, PdfFormField> entry : fields.entrySet()) {
                String fullFieldName = entry.getKey();
                PdfFormField field = entry.getValue();
                String dummyValue = generateDummyData(fullFieldName,clientData1Json);
                field.setValue(dummyValue);
            }

            // Optionally flatten fields
            // form.flattenFields();

            System.out.println("✅ PDF saved to: " + outputPath);

        } catch (IOException e) {
            System.err.println("❌ Error filling PDF: " + e.getMessage());
        }
    }

}
