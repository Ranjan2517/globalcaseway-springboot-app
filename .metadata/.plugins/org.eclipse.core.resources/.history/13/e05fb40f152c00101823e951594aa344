package com.app.controller;

import com.app.util.XfaFlattener;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.app.entity.User;
import com.app.pojo.ClientData;
import com.app.repository.UserRepository;
import com.app.util.FillAcroForm;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.FileSystemResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.util.Optional;
@CrossOrigin("*")
@RestController
@RequestMapping("/api/pdf")
public class PdfController {

    
    @CrossOrigin("*")
    @PostMapping("/fill-upload")
    public ResponseEntity<FileSystemResource> uploadAndFillPdf(
            @RequestParam("file") MultipartFile multipartFile,
            @RequestParam("clientData1") String clientData1Json
    ) {
        try {
            // ✅ Deserialize JSON into Java object
            ObjectMapper objectMapper = new ObjectMapper();
            ClientData clientData = objectMapper.readValue(clientData1Json, ClientData.class);


            // ✅ Save file
            File tempInputFile = new File("D:\\java xfa\\uploaded_input.pdf");
            multipartFile.transferTo(tempInputFile);

            String outputPath = "D:\\java xfa\\uploaded_filled.pdf";
            FillAcroForm.fillPdfWithDummyData(tempInputFile.getAbsolutePath(), outputPath,clientData1Json);

            File resultFile = new File(outputPath);
            if (!resultFile.exists()) return ResponseEntity.notFound().build();

            return ResponseEntity.ok()
                    .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"filled_uploaded.pdf\"")
                    .contentType(MediaType.APPLICATION_PDF)
                    .body(new FileSystemResource(resultFile));

        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.internalServerError().body(null);
        }
    }

}
